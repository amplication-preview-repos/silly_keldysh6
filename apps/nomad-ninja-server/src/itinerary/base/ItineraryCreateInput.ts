/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AccommodationWhereUniqueInput } from "../../accommodation/base/AccommodationWhereUniqueInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  MaxLength,
  IsDate,
} from "class-validator";
import { Type } from "class-transformer";
import { BookingCreateNestedManyWithoutItinerariesInput } from "./BookingCreateNestedManyWithoutItinerariesInput";
import { DestinationWhereUniqueInput } from "../../destination/base/DestinationWhereUniqueInput";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";

@InputType()
class ItineraryCreateInput {
  @ApiProperty({
    required: false,
    type: () => AccommodationWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => AccommodationWhereUniqueInput)
  @IsOptional()
  @Field(() => AccommodationWhereUniqueInput, {
    nullable: true,
  })
  accommodation?: AccommodationWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  activities?: string | null;

  @ApiProperty({
    required: false,
    type: () => BookingCreateNestedManyWithoutItinerariesInput,
  })
  @ValidateNested()
  @Type(() => BookingCreateNestedManyWithoutItinerariesInput)
  @IsOptional()
  @Field(() => BookingCreateNestedManyWithoutItinerariesInput, {
    nullable: true,
  })
  bookings?: BookingCreateNestedManyWithoutItinerariesInput;

  @ApiProperty({
    required: false,
    type: () => DestinationWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => DestinationWhereUniqueInput)
  @IsOptional()
  @Field(() => DestinationWhereUniqueInput, {
    nullable: true,
  })
  destination?: DestinationWhereUniqueInput | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  endDate?: Date | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  startDate?: Date | null;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput | null;
}

export { ItineraryCreateInput as ItineraryCreateInput };
